/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013 Robert O'Leary
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
jQuery(document).ready(function($){var controller=new Leap.Controller();var trainer=new LeapTrainer.Controller({controller:controller});var body=$("body");var gesturesArea=$("#gestures-area");var creationForm=$("#new-gesture-form");var existingGestures=$("#existing-gestures");var existingGestureList=$("#existing-gesture-list");var newGestureName=$("#new-gesture-name");var output=$("#output");var outputArea=$("#output-area");var outputText=$("#output-text");var h1=$("h1");var h2=$("h2");var h3=$("h3");var chartArea=$("#chart-area");var chart=new Chart(chartArea[0].getContext("2d"));var overlayArea=$("#overlay");var overlayShade=$("#overlay-shade");var exportingName=$("#exporting-gesture-name");var exportingSampleText=$("#exporting-gesture-sample-text");var exportText=$("#export-text");var closeOverlayButton=$("#close-overlay");var white="#FFFFFF";var red="#EE5A40";var green="#9BEC42";var yellow="#EDE941";var grey="#CCCCCC";var chartBlue="rgba(135, 206, 235, 0.5)";var chartFill=chartBlue;var chartStroke=white;var chartPoint=chartBlue;var chartPointStroke=white;var scaleLineColor=white;var scaleGridLineColor=grey;var datasetStrokeWidth=1;var scaleLineWidth=1;var scaleGridLineWidth=0.25;var scaleFontColor="#333";var scaleFontFamily="Calibri";var scaleFontStyle="bold";var RECOGNIZED="Recognized!";var RECORDING="Recording";var EXPORT="Export";var windowHeight,gesturesAreaWidth,outputDiameter,ring=null,ringArea=null,outputWidth,h1Size,h2Size,h3Size,labels=[],datasets=[],frames,data;existingGestures.perfectScrollbar({wheelSpeed:30,minScrollbarLength:10});$("#options-button").sidr({name:"options",source:"#options",side:"right"});function openOptions(){$.sidr("open","options");}function closeOptions(){$.sidr("close","options");}$(window).touchwipe({wipeRight:closeOptions,wipeLeft:openOptions,preventDefaultEvents:false});var recordingTriggers=$("#sidr-id-recording-triggers");var recordingStrategies=$("#sidr-id-recording-strategies");var recogStrategies=$("#sidr-id-recognition-strategies");var updateConfirmation=$("#sidr-id-options-update-confirmation");function optionsUpdated(){updateConfirmation.show();setTimeout(function(){updateConfirmation.hide();},3000);}var impl,t=[],s=[],cs=[];function setupOptionList(rt,t,list,implName){if(rt){rt=rt();if(t.indexOf(rt)==-1){t.push(rt);list.append('<option value="'+implName+'">'+rt+"</option>");}}}for(var implName in LeapTrainer){impl=LeapTrainer[implName].prototype;setupOptionList(impl.getRecordingTriggerStrategy,t,recordingTriggers,implName);setupOptionList(impl.getFrameRecordingStrategy,s,recordingStrategies,implName);setupOptionList(impl.getRecognitionStrategy,cs,recogStrategies,implName);}function modifyController(replacementController){replacementController=LeapTrainer[replacementController];var fields=replacementController.overidden;var func;for(var field in fields){func=replacementController.prototype[field];if(func.bind){func.bind(trainer);}trainer[field]=func;}optionsUpdated();}recordingTriggers.change(function(){modifyController(recordingTriggers.val());});recordingStrategies.change(function(){modifyController(recordingStrategies.val());});recogStrategies.change(function(){modifyController(recogStrategies.val());});function setupOptionInput(binding){var input=$("#sidr-id-"+binding);input.val(trainer[binding]);input.blur(function(){var val=input.val();if(val!=trainer[binding]){trainer[binding]=val;optionsUpdated();}});}setupOptionInput("minRecordingVelocity");setupOptionInput("minGestureFrames");setupOptionInput("hitThreshold");setupOptionInput("trainingGestures");setupOptionInput("convolutionFactor");setupOptionInput("downtime");closeOverlayButton.click(closeExportOverlay);overlayShade.on("click",function(e){if(body.hasClass("overlay-open")){closeExportOverlay();}});$(document).on("keydown",function(e){if(e.keyCode===27){closeExportOverlay();}});exportText.click(function(){this.focus();this.select();});function openExportOverlay(listItem,gestureName){listItem.addClass("selected");exportingName.html(gestureName);var json=trainer.toJSON(gestureName);exportingSampleText.html((json.length>60?json.substring(0,60):json)+"...");exportText.html(json);body.addClass("overlay-open");exportText.css({height:overlayArea.height()-(overlayArea.children()[0].clientHeight+150)});}function closeExportOverlay(){existingGestureList.find("li").removeClass("selected");body.removeClass("overlay-open");}var openConfiguration=$("#sidr-id-open-configuration");var closeConfiguration=$("#sidr-id-close-configuration");var exportCloseOverlay=$("#sidr-id-close-export-overlay");var openConfigGesture=null,closeConfigGesture=null,closeExportGesture=null;function registerUIGesture(oldGesture,newGesture,func){trainer.off(oldGesture,func);trainer.on(newGesture,func);optionsUpdated();return newGesture;}openConfiguration.change(function(){openConfigGesture=registerUIGesture(openConfigGesture,openConfiguration.val(),openOptions);});closeConfiguration.change(function(){closeConfigGesture=registerUIGesture(closeConfigGesture,closeConfiguration.val(),closeOptions);});exportCloseOverlay.change(function(){closeExportGesture=registerUIGesture(closeExportGesture,exportCloseOverlay.val(),closeExportOverlay);});function updateDimensions(){windowHeight=$(window).innerHeight();gesturesArea.css({height:windowHeight});overlayShade.css({height:windowHeight});gesturesAreaWidth=gesturesArea.width();chartArea.css({width:gesturesAreaWidth*0.88,height:gesturesAreaWidth*0.6,bottom:gesturesAreaWidth*0.04,left:gesturesAreaWidth*0.04});existingGestures.css({height:windowHeight-chartArea.height()-170});outputWidth=($(window).innerWidth()-gesturesAreaWidth-1);outputArea.css({width:outputWidth});h1Size=Math.max(outputWidth/15,16);h2Size=Math.max(outputWidth/50,13);h3Size=Math.max(outputWidth/55,12);h1.css({fontSize:h1Size});h2.css({fontSize:h2Size});h3.css({fontSize:h3Size});outputText.css({top:(windowHeight/2.2)-outputText.height()/2});outputDiameter=outputWidth/1.6;if(!ring){ring=output.knob({height:outputDiameter,width:outputDiameter,min:0,max:100,readOnly:true,inline:false,displayInput:false,fgColor:green,thickness:0.15});ringArea=$($(outputArea.children()[0]).children()[0]);ringArea.css({position:"absolute"});}else{output.trigger("configure",{height:outputDiameter,width:outputDiameter});}ringArea.css({top:(windowHeight-outputDiameter)/2,left:(outputWidth-outputDiameter)/2});overlayArea.css({left:gesturesAreaWidth+((outputWidth*0.3)/2),width:outputWidth*0.7,height:windowHeight*0.9});exportText.css({height:overlayArea.height()-(overlayArea.children()[0].clientHeight+150)});}updateDimensions();$(window).resize(updateDimensions);gesturesArea.show();newGestureName.data("default-text",newGestureName.val());newGestureName.focus(function(){if($(this).val()!=""&&$(this).val()==$(this).data("default-text")){$(this).val("");}}).blur(function(){if($(this).val()==""){$(this).val($(this).data("default-text"));}});creationForm.submit(function(){var name=newGestureName.val().trim();if(name.length==0||name==newGestureName.data("default-text")||trainer.gestures[name]!=null){return false;}trainer.create(name);return false;});function setOutputText(h1Text,h2Text,h3Text){h1.html(h1Text?h1Text:"&nbsp;");h3.html(h2Text?h2Text:"&nbsp;");h2.html(h3Text?h3Text:"&nbsp;");}trainer.on("gesture-created",function(gestureName,trainingSkipped){var gesture=$("<li"+(trainingSkipped?"":' class="selected"')+'><span class="gesture-name">'+gestureName+'</span><img class="training-arrow" src="./trainer-ui/images/training-arrow.png" />'+'<img class="export-arrow" src="./trainer-ui/images/export-arrow.png" />'+'<span class="training-label">'+(trainingSkipped?RECOGNIZED:RECORDING)+'</span><span class="export-gesture">'+EXPORT+"</span></li>");gesture.click(function(){openExportOverlay(gesture,gestureName);});var items=existingGestureList.find("li");if(items.length==0){existingGestureList.append(gesture);}else{existingGestureList.find("li").removeClass("selected");$("#existing-gesture-list li").first().before(gesture);}existingGestures.trigger("mousewheel.perfect-scroll");newGestureName.val("");newGestureName.blur();openConfiguration.append('<option value="'+gestureName+'">'+gestureName+"</option>");closeConfiguration.append('<option value="'+gestureName+'">'+gestureName+"</option>");exportCloseOverlay.append('<option value="'+gestureName+'">'+gestureName+"</option>");});trainer.on("training-started",function(gestureName){setOutputText(gestureName,"Recording","Perform the "+gestureName.toUpperCase()+" gesture "+trainer.trainingGestures+" times");output.val(0).trigger("change").trigger("configure",{fgColor:yellow});});trainer.on("training-gesture-saved",function(gestureName,trainingSet){var trainingGestures=trainer.trainingGestures;var remaining=(trainingGestures-trainingSet.length);output.val(100-((100/trainingGestures)*remaining)).trigger("change");setOutputText(gestureName,"Recording","Perform the "+gestureName.toUpperCase()+" gesture "+(remaining==1?" once more":remaining+" more times"));});trainer.on("training-complete",function(gestureName,trainingSet){output.val(100).trigger("change").trigger("configure",{fgColor:green});setOutputText(gestureName+"!","Learned");existingGestureList.find("li").removeClass("selected");existingGestureList.find(".gesture-name").each(function(){var g=$(this);if(g.html()==gestureName){g.next().next().html(RECOGNIZED);}});});trainer.on("gesture-recognized",function(hit,gestureName){setOutputText(gestureName,null,hit);output.val(100*hit).trigger("change").trigger("configure",{fgColor:green});existingGestureList.find("li").removeClass("selected hit");existingGestureList.find(".gesture-name").each(function(){var g=$(this);if(g.html()==gestureName){g.parent().addClass("selected hit");g.next().next().next().html(RECOGNIZED);}});});trainer.on("gesture-unknown",function(highestHit,closestGesture){if(existingGestureList.find("li").length>0){setOutputText();}output.val(100*highestHit).trigger("change").trigger("configure",{fgColor:grey});existingGestureList.find("li").removeClass("selected hit");});function updateChart(gestureActivity,recordedFrames){frames=gestureActivity.length/recordedFrames;labels.length=0;datasets.length=0;for(var i=0,l=frames;i<l;i++){labels.push(i+1);data=[];for(var j=0;j<frames;j++){data.push((gestureActivity[(i*frames)+j]));}datasets.push({fillColor:chartFill,strokeColor:chartStroke,pointColor:chartPoint,pointStrokeColor:chartPointStroke,data:data,bezierCurve:false});}chart.Line({labels:labels,datasets:datasets},{scaleFontFamily:scaleFontFamily,scaleLineColor:scaleLineColor,scaleLineWidth:scaleLineWidth,scaleGridLineWidth:scaleGridLineWidth,scaleFontColor:scaleFontColor,scaleFontStyle:scaleFontStyle,scaleGridLineColor:scaleGridLineColor,datasetStrokeWidth:datasetStrokeWidth});}trainer.on("gesture-detected",updateChart);updateChart([1,1,1,1,1,1,1,1,1,1],1);controller.on("connect",function(){setOutputText("Ready!",null,"Create a gesture to get started");});controller.on("deviceConnected",function(){output.val(100).trigger("change").trigger("configure",{fgColor:green});setOutputText("Connected!",null," The connection to your Leap Motion has been restored!");});controller.on("deviceDisconnected",function(){output.val(100).trigger("change").trigger("configure",{fgColor:red});setOutputText("Disconnected!",null," Check the connection to your Leap Motion!");});controller.connect();});