/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013 Robert O'Leary
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var LeapTrainer={};(function(){var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\b_super\b/:/.*/;this.Class=function(){};Class.extend=function(prop){var _super=this.prototype;initializing=true,prototype=new this();initializing=false;for(var name in prop){prototype[name]=typeof prop[name]=="function"&&typeof _super[name]=="function"&&fnTest.test(prop[name])?(function(name,fn){return function(){var tmp=this._super;this._super=_super[name];var ret=fn.apply(this,arguments);this._super=tmp;return ret;};})(name,prop[name]):prop[name];}function Class(){if(!initializing&&this.initialize){this.initialize.apply(this,arguments);}}Class.prototype=prototype;Class.prototype.constructor=Class;Class.extend=arguments.callee;Class.overidden=prop;return Class;};})();LeapTrainer.Controller=Class.extend({controller:null,minRecordingVelocity:400,minGestureFrames:5,hitThreshold:0.6,trainingGestures:3,convolutionFactor:3,downtime:200,lastHit:0,gestures:{},trainingGesture:null,listeners:{},paused:false,initialize:function(options){if(options){for(var optionName in options){if(options.hasOwnProperty(optionName)){this[optionName]=options[optionName];}}}var connectController=!this.controller;if(connectController){this.controller=new Leap.Controller();}this.bindFrameListener();if(connectController){this.controller.connect();}},onFrame:function(){},bindFrameListener:function(){var recording=false,frameCount=0,gesture=[];recordValue=function(val){gesture.push(isNaN(val)?0:Math.abs(val));},recordVector=function(v){recordValue(v[0]);recordValue(v[1]);recordValue(v[2]);};this.onFrame=function(frame){if(this.paused){return;}if(new Date().getTime()-this.lastHit<this.downtime){return;}if(this.recordableFrame(frame,this.minRecordingVelocity)){if(!recording){recording=true;frameCount=0;gesture=[];}frameCount++;this.recordFrame(frame,this.controller.frame(1),recordVector,recordValue);}else{if(recording){recording=false;if(frameCount>=this.minGestureFrames){this.fire("gesture-detected",gesture,frameCount);var gestureName=this.trainingGesture;if(gestureName){this.saveTrainingGesture(gestureName,gesture);}else{this.recognize(gesture);}this.lastHit=new Date().getTime();}}}};this.controller.on("frame",this.onFrame.bind(this));},recordableFrame:function(frame,min){var hands=frame.hands,j,hand,fingers,palmVelocity,tipVelocity;for(var i=0,l=hands.length;i<l;i++){hand=hands[i];palmVelocity=hand.palmVelocity;if(Math.abs(Math.max(palmVelocity[0],palmVelocity[1],palmVelocity[2]))>=min){return true;}fingers=hand.fingers;for(j=0,k=fingers.length;j<k;j++){tipVelocity=fingers[j].tipVelocity;if(Math.abs(Math.max(tipVelocity[0],tipVelocity[1],tipVelocity[2]))>=min){return true;}}}},recordFrame:function(frame,lastFrame,recordVector,recordValue){recordVector(frame.translation(lastFrame));recordVector(frame.rotationAxis(lastFrame));recordVector(frame.scaleFactor(lastFrame));},create:function(gestureName,skipTraining){this.gestures[gestureName]=[];this.fire("gesture-created",gestureName,skipTraining);if(typeof skipTraining=="undefined"||!skipTraining){this.startTraining(gestureName);}},startTraining:function(gestureName){this.trainingGesture=gestureName;this.fire("training-started",gestureName);},trainAlgorithm:function(gestureName,trainingGestures){},saveTrainingGesture:function(gestureName,gesture){var trainingGestures=this.gestures[gestureName];trainingGestures.push(gesture);if(trainingGestures.length==this.trainingGestures){this.gestures[gestureName]=this.distribute(trainingGestures);this.trainingGesture=null;this.trainAlgorithm(gestureName,trainingGestures);this.fire("training-complete",gestureName,trainingGestures);}else{this.fire("training-gesture-saved",gestureName,trainingGestures);}},distribute:function(trainingGestures){var factor=this.convolutionFactor;if(factor==0){return trainingGestures;}var gesture,generatedGesture,value;for(var i=0,p=factor;i<p;i++){for(var j=0,l=trainingGestures.length;j<l;j++){gesture=trainingGestures[j];generatedGesture=[];for(var k=0,m=gesture.length;k<m;k++){value=gesture[k];generatedGesture[k]=Math.round((Math.random()*2-1)+(Math.random()*2-1)+(Math.random()*2-1)*((value*10000)/50)+(value*10000))/10000;}trainingGestures.push(generatedGesture);}}return trainingGestures;},recognize:function(gesture){var gestures=this.gestures;var threshold=this.hitThreshold;var hit=0;var bestHit=0;var recognized=false;var closestGestureName=null;for(var gestureName in gestures){hit=this.correlate(gestureName,gestures[gestureName],gesture);if(hit>=threshold){recognized=true;}if(hit>bestHit){bestHit=hit;closestGestureName=gestureName;}}this.fire(recognized?"gesture-recognized":"gesture-unknown",bestHit,closestGestureName);if(recognized){this.fire(closestGestureName);}},correlate:function(gestureName,trainingGestures,gesture){var correlation=0;var correlationCount=trainingGestures.length;var x=gesture,y,lx=x.length,ly,xi,yi,k,mx,my,sx,sy,sxy,d;mx=0;for(var i=0;i<lx;i++){mx+=x[i];}mx=mx/lx;for(var i=0,l=correlationCount;i<l;i++){y=trainingGestures[i];ly=y.length;my=0;for(var j=0;j<ly;j++){my+=y[j];}my/=ly;sx=0;sy=0;k=Math.max(lx,ly);for(var j=0;j<k;j++){if(j<lx){xi=x[j];sx+=(xi-mx)*(xi-mx);}if(j<ly){yi=y[j];sy+=(yi-my)*(yi-my);}}d=Math.sqrt(sx*sy);sxy=0;for(var j=0;j<k;j++){if(j<lx&&j<ly){sxy+=(x[j]-mx)*(y[j]-my);}}correlation+=sxy/d;}return correlation/correlationCount;},getRecordingTriggerStrategy:function(){return"Frame velocity";},getFrameRecordingStrategy:function(){return"Low-Resolution";},getRecognitionStrategy:function(){return"Cross-Correlation";},toJSON:function(gestureName){var gesture=this.gestures[gestureName];if(gesture){return JSON.stringify({name:gestureName,data:gesture});}},fromJSON:function(json){var imp=JSON.parse(json);var gestureName=imp.name;this.create(gestureName,true);this.gestures[gestureName]=imp.data;return imp;},on:function(event,listener){var listening=this.listeners[event];if(!listening){listening=[];}listening.push(listener);this.listeners[event]=listening;},off:function(event,listener){if(!event){return;}var listening=this.listeners[event];if(listening){listening.splice(listening.indexOf(listener),1);this.listeners[event]=listening;}},fire:function(event){var listening=this.listeners[event];if(listening){var args=Array.prototype.slice.call(arguments);args.shift();for(var i=0,l=listening.length;i<l;i++){listening[i].apply(this,args);}}},pause:function(){this.paused=true;},resume:function(){this.paused=false;},destroy:function(){this.controller.removeListener("frame",this.onFrame);}});